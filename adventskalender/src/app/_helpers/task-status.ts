
/*    +-----------------------------------------------------------------------+    */
/*    |    Do not edit this file directly.                                    |    */
/*    |    It was copied by redundancyJS.                                     |    */
/*    |    To modify it, first edit the source file (see redundancy.json).    |    */
/*    |    Then, run "npx redundancyjs" in the terminal.                      |    */
/*    +-----------------------------------------------------------------------+    */

/* do not edit */ import { Task, TaskStatus } from "../_models/Task";
/* do not edit */ 
/* do not edit */ const CHRISTMAS = 24;
/* do not edit */ 
/* do not edit */ export function getBack(taskDay: number, dayOfWeek: number): number {
/* do not edit */     if (taskDay == CHRISTMAS) {
/* do not edit */         return 4;
/* do not edit */     }
/* do not edit */     // because of some people having problems on iOS devices
/* do not edit */     if (taskDay == 1) {
/* do not edit */         return 3;
/* do not edit */     }
/* do not edit */ 
/* do not edit */     enum DayOfWeek {
/* do not edit */         SUNDAY = 0,
/* do not edit */         MONDAY = 1,
/* do not edit */         TUESDAY = 2,
/* do not edit */         WEDNESDAY = 3,
/* do not edit */         THURSDAY = 4,
/* do not edit */         FRIDAY = 5,
/* do not edit */         SATURDAY = 6
/* do not edit */     }
/* do not edit */ 
/* do not edit */     switch (dayOfWeek) {
/* do not edit */     case DayOfWeek.SUNDAY:
/* do not edit */         return 3;
/* do not edit */     case DayOfWeek.MONDAY:
/* do not edit */         return 4;
/* do not edit */     case DayOfWeek.TUESDAY:
/* do not edit */         return 4;
/* do not edit */     case DayOfWeek.WEDNESDAY:
/* do not edit */         return 2;
/* do not edit */     case DayOfWeek.THURSDAY:
/* do not edit */         return 2;
/* do not edit */     case DayOfWeek.FRIDAY:
/* do not edit */         return 2;
/* do not edit */     case DayOfWeek.SATURDAY:
/* do not edit */         return 2;
/* do not edit */     default:
/* do not edit */         break;
/* do not edit */     }
/* do not edit */     return 0;
/* do not edit */ }
/* do not edit */ 
/* do not edit */ export function getTaskStatus(task: Task, fakeTodayForTesting?: number): TaskStatus {
/* do not edit */     const year = new Date().getFullYear();
/* do not edit */     let now: Date;
/* do not edit */     // let todayDay: number;
/* do not edit */     let date: Date;
/* do not edit */     // let month: number;
/* do not edit */     // January is month 0, that's why December is 11
/* do not edit */     if (fakeTodayForTesting) {
/* do not edit */         now = new Date(year, 11, fakeTodayForTesting);
/* do not edit */         // todayDay = fakeTodayForTesting;
/* do not edit */         date = new Date(year, 11, task.day);
/* do not edit */         // month = 12;
/* do not edit */     } else {
/* do not edit */         now = new Date();
/* do not edit */         now.setHours(0, 0, 0, 0);
/* do not edit */         // todayDay = now.getDate();
/* do not edit */         date = new Date(year, 11, task.day);
/* do not edit */         // month = new Date().getMonth();
/* do not edit */     }
/* do not edit */     const dayOfWeek = now.getDay();
/* do not edit */     const dateDiff = date.getTime() - now.getTime();
/* do not edit */     const diff = Math.floor(dateDiff / (60 * 60 * 24 * 1000));
/* do not edit */ 
/* do not edit */     const zurueckliegend = getBack(task.day, dayOfWeek);
/* do not edit */     if (-zurueckliegend < diff && diff <= 0) {
/* do not edit */         return TaskStatus.OPEN;
/* do not edit */     }
/* do not edit */     if (diff > 0) {
/* do not edit */         return TaskStatus.LOCKED;
/* do not edit */     }
/* do not edit */     // if (differance <= -zurueckliegend) {
/* do not edit */     return TaskStatus.SOLVED;
/* do not edit */     // }
/* do not edit */ }
/* do not edit */