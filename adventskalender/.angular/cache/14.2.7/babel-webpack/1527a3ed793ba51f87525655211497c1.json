{"ast":null,"code":"import { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./storage.service\";\nexport let RemoteService = /*#__PURE__*/(() => {\n  class RemoteService {\n    constructor(httpClient, storageService) {\n      this.httpClient = httpClient;\n      this.storageService = storageService;\n    }\n\n    getImageUrl(url, authService) {\n      var _a;\n\n      return `/api/${url}?authorization=${(_a = authService.currentUser) === null || _a === void 0 ? void 0 : _a.jwtToken}`;\n    }\n\n    get(url) {\n      return this.httpClient.get(`/api/${url}`);\n    } // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\n    post(url, data, options) {\n      return this.httpClient.post(`/api/${url}`, data, options);\n    }\n\n    delete(url) {\n      return this.httpClient.delete(`/api/${url}`);\n    }\n\n  }\n\n  RemoteService.ɵfac = function RemoteService_Factory(t) {\n    return new (t || RemoteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StorageService));\n  };\n\n  RemoteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RemoteService,\n    factory: RemoteService.ɵfac,\n    providedIn: \"root\"\n  });\n  return RemoteService;\n})();","map":null,"metadata":{},"sourceType":"module"}