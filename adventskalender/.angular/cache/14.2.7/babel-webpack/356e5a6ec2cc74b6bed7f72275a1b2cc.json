{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./_components/navbar/navbar.component\";\nimport * as i3 from \"./_components/footer/footer.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      // Set the number of snowflakes (more than 30 - 40 not recommended)\n      this.snowmax = 35; // Set the colors for the snow. Add as many colors as you like\n\n      this.snowcolor = [\"#aaaacc\", \"#ddddff\", \"#ccccdd\", \"#f3f3f3\", \"#f0ffff\"]; // Set the fonts, that create the snowflakes. Add as many fonts as you like\n\n      this.snowtype = [\"Times\", \"Arial\", \"Times\", \"Verdana\"]; // Set the letter that creates your snowflake (recommended: * )\n\n      this.snowletter = \"*\"; // Set the speed of sinking (recommended values range from 0.3 to 2)\n\n      this.sinkspeed = 0.6; // Set the maximum-size of your snowflakes\n\n      this.snowmaxsize = 30; // Set the minimal-size of your snowflakes\n\n      this.snowminsize = 8; // Set the snowing-zone\n      // Set 1 for all-over-snowing, set 2 for left-side-snowing\n      // Set 3 for center-snowing, set 4 for right-side-snowing\n\n      this.snowingzone = 1; /// ////////////////////////////////////////////////////////////////////////\n      // CONFIGURATION ENDS HERE\n      /// ////////////////////////////////////////////////////////////////////////\n      // Do not edit below this line\n\n      this.snow = [];\n      this.xMv = [];\n      this.crds = [];\n      this.lftrght = [];\n      this.browserinfos = navigator.userAgent;\n      this.ie5 = document.all && document.getElementById && !this.browserinfos.match(/Opera/);\n      this.ns6 = document.getElementById && !document.all;\n      this.opera = this.browserinfos.match(/Opera/);\n    }\n\n    ngOnInit() {\n      /*\r\n      Snow Fall 1 - no images - Java Script\r\n      Visit http://rainbow.arch.scriptmania.com/scripts/\r\n      for this script and many more\r\n      */\n      for (let i = 0; i <= this.snowmax; i++) {\n        const span = document.createElement(\"span\");\n        span.style.pointerEvents = \"none\";\n        span.style.position = \"absolute\";\n        span.style.top = `-${this.snowmaxsize}`;\n        span.innerText = this.snowletter;\n        span.id = `s${i}`;\n        document.body.appendChild(span);\n      }\n\n      this.initSnow();\n    }\n\n    randommaker(range) {\n      return Math.floor(range * Math.random());\n    }\n\n    initSnow() {\n      if (this.ie5 || this.opera) {\n        this.marginbottom = document.body.scrollHeight;\n        this.marginright = document.body.clientWidth - 15;\n      } else if (this.ns6) {\n        this.marginbottom = document.body.scrollHeight;\n        this.marginright = window.innerWidth - 15;\n      }\n\n      const snowsizerange = this.snowmaxsize - this.snowminsize;\n\n      for (let i = 0; i <= this.snowmax; i++) {\n        this.crds[i] = 0;\n        this.lftrght[i] = Math.random() * 15;\n        this.xMv[i] = 0.03 + Math.random() / 10;\n        this.snow[i] = document.getElementById(`s${i}`);\n        this.snow[i].style.fontFamily = this.snowtype[this.randommaker(this.snowtype.length)];\n        this.snow[i].size = this.randommaker(snowsizerange) + this.snowminsize;\n        this.snow[i].style.fontSize = `${this.snow[i].size}px`;\n        this.snow[i].style.color = this.snowcolor[this.randommaker(this.snowcolor.length)];\n        this.snow[i].style.zIndex = 1000;\n        this.snow[i].sink = this.sinkspeed * this.snow[i].size / 5;\n\n        if (this.snowingzone == 1) {\n          this.snow[i].posx = this.randommaker(this.marginright - this.snow[i].size);\n        }\n\n        if (this.snowingzone == 2) {\n          this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size);\n        }\n\n        if (this.snowingzone == 3) {\n          this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size) + this.marginright / 4;\n        }\n\n        if (this.snowingzone == 4) {\n          this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size) + this.marginright / 2;\n        }\n\n        this.snow[i].posy = this.randommaker(2 * this.marginbottom - this.marginbottom - 2 * this.snow[i].size);\n        this.snow[i].style.left = `${this.snow[i].posx}px`;\n        this.snow[i].style.top = `${this.snow[i].posy}px`;\n      } // eslint-disable-next-line no-use-before-define\n\n\n      this.moveSnow();\n    }\n\n    moveSnow() {\n      for (let i = 0; i <= this.snowmax; i++) {\n        this.crds[i] += this.xMv[i];\n        this.snow[i].posy += this.snow[i].sink;\n        this.snow[i].style.left = `${this.snow[i].posx + this.lftrght[i] * Math.sin(this.crds[i])}px`;\n        this.snow[i].style.top = `${this.snow[i].posy}px`;\n\n        if (this.snow[i].posy >= this.marginbottom - 2 * this.snow[i].size || parseInt(this.snow[i].style.left) > this.marginright - 3 * this.lftrght[i]) {\n          if (this.snowingzone == 1) {\n            this.snow[i].posx = this.randommaker(this.marginright - this.snow[i].size);\n          }\n\n          if (this.snowingzone == 2) {\n            this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size);\n          }\n\n          if (this.snowingzone == 3) {\n            this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size) + this.marginright / 4;\n          }\n\n          if (this.snowingzone == 4) {\n            this.snow[i].posx = this.randommaker(this.marginright / 2 - this.snow[i].size) + this.marginright / 2;\n          }\n\n          this.snow[i].posy = 0;\n        }\n      }\n\n      setTimeout(() => this.moveSnow(), 30);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"page\"], [1, \"fullheight\", \"container\"], [1, \"bg-semitransparent\", \"my-5\", \"p-3\", \"p-md-5\", \"text-center\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-navbar\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵelement(4, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"app-footer\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i1.RouterOutlet, i2.NavbarComponent, i3.FooterComponent],\n    styles: [\".page[_ngcontent-%COMP%]{width:100vw;min-height:100vh;background-image:url(/assets/backgrounds/banner.jpg);background-size:cover;background-attachment:fixed;background-position:center center}div.fullheight[_ngcontent-%COMP%]{min-height:calc(100vh - 4rem);width:100vw}@media (max-width: 576px){div.fullheight.container[_ngcontent-%COMP%]{width:calc(100vw - 1rem);margin-left:0}}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}